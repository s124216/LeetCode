/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *root;
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        root = ConstructMBT(0, nums.size()-1, nums);
        return root;
    }
    TreeNode* ConstructMBT(int start, int end, vector<int>& nums)
    {
        int i, Max = -1, MaxIndex = -1;
        TreeNode *temp = NULL;
        for (i = start; i <= end; i++)
        {
            if (Max < nums[i])
            {
                Max = nums[i];
                MaxIndex = i;
            }
        }
        if(MaxIndex == -1)
            return NULL;
        else
            temp = new TreeNode(Max);
        temp->left = ConstructMBT(start, MaxIndex-1, nums);
        temp->right = ConstructMBT(MaxIndex + 1, end, nums);
        return temp;
    }
};